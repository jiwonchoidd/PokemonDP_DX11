struct VS_OUTPUT
{
	float4 p : SV_POSITION;
	float3 n : NORMAL;
	float4 c : COLOR0;
	float2 t : TEXCOORD0;
};
cbuffer CBuf
{
	matrix g_matWorld : packoffset(c0);
	matrix g_matView : packoffset(c4);
	matrix g_matProj : packoffset(c8);
	matrix g_matNormal : packoffset(c12);
	float4 g_color : packoffset(c16);
	float4 g_value : packoffset(c17); 
};
Texture2D	g_txColor : register(t0);
Texture2D	g_txMask : register(t1);
SamplerState	g_Sample : register(s0);

float4 PS(VS_OUTPUT input) : SV_TARGET
{	
	float4 color = g_txColor.Sample(g_Sample, input.t);
	float4 mask = g_txMask.Sample(g_Sample, input.t);
	float4 final = color;
	final.a = 1.0f - mask.r;
	return final * g_color;
}